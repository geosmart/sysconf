export LC_ALL=en_US.UTF-8
export DEFAULT_USER="[+_+]"
export GOPATH=$HOME/github/go
export GRADLE_HOME=/opt/tool/gradle/gradle-6.7
export HISTFILESIZE=10000
export HISTSIZE=10000
export HISTTIMEFORMAT="%d/%m/%y %T "
export JAVA_HOME=/opt/tool/jdk/jdk1.8
export JAVA_TOOL_OPTIONS="-XX:MaxRAMPercentage=75.0"
export CDH_HOME=/opt/cdh
export SPARK_HOME=${CDH_HOME}/lib/spark
export SPARK_LOCAL_IP=127.0.0.1
export HADOOP_CONF_DIR=/opt/cdh/lib/hadoop/etc/hadoop
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export NODE_PATH=/usr/local/lib/node_modules
export CONDA_HOME=/opt/tool/miniconda3
export MAVEN_HOME=/opt/tool/maven/apache-maven-3.9.9
export CUSTOM_APP_PATH=/opt/tool/AppImage
export PATH=$HOME/.sysconf/bin:$GOPATH/bin:$GRADLE_HOME/bin:$JAVA_HOME/bin:$CDH_HOME/bin:$SPARK_HOME/bin:$CONDA_HOME/bin:$MAVEN_HOME/bin:/usr/sbin:$PATH
export TRASH_DIR=$HOME/.local/share/Trash

export GTK_IM_MODULE=fcitx
export LC_CTYPE="zh_CN.UTF-8"
export QT_IM_MODULE=fcitx
export XMODIFIERS="@im=fcitx"

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/tool/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/tool/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/opt/tool/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/opt/tool/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# alias
alias 2fa='node -e "console.log(require(\"otplib\").authenticator.generate(process.argv[1]))"'
alias ackj='ack --type kotlin --type java --type groovy'
alias ackng='ack --nogroup'
alias apt='sudo apt'
alias apthi='bash -c "sudo apt -o Acquire::http::Proxy=http://\$0 install \$1"'
alias base58='basex -i $(echo {0..9} {A..Z} {a..z} | tr -d " 0IOl")'
alias base62='basex -i $(echo {0..9} {A..Z} {a..z} | tr -d " ")'
alias bcrypt='htpasswd -bnBC 10 ""'
alias cmemchk='valgrind --tool=memcheck --leak-check=full'
alias code='code -n'
alias cpufreq="cpufreq-info | tr '\n' '\r' | sed -e 's/\r\s\{8,\}/ /g' | tr '\r' '\n' | grep current"
alias datev='date +%Y%m%d%H%M%S'
alias digs='dig +noall +answer'
alias ffunix='vi -c ":set ff=unix" -c ":wq"'
alias fish='fish -P'
alias gl='git log --pretty=format:"%Cblue%<(22,trunc)%cd %Cgreen%h%Creset %s %Cred@%an" --date=iso8601'
alias grep='grep --color'
alias hl='grep --color=always -e ^ -e'
alias ip4='ip -4 -br'
alias isp='http -b http://ip-api.com/json'
alias jdump='bash -c "set -x; jmap -dump:format=b,file=\$0.dump \$0"'
alias jqi='bash -c "cat <<< \$(jq \$0 \$1) > \$1"'
alias la='ls -A'
alias lh='ls -lh'
alias ll='ls -l'
alias ls='ls --color=auto'
alias psync='rsync -Pz --info=progress2'
alias pyfmt='bash -c "isort \$0 && black \$0"'
alias randn='shuf -i 1-9223372036854775807 -n 1'
alias rm='rm -I'
alias si='sudo -i'
alias suspend='sudo systemctl suspend'
alias tarip='tar --strip-components=1 -x -f'
alias tgit="tsocks git"
alias timev="/usr/bin/time -v"
alias tree='tree -C --dirsfirst'
alias tsfmt='prettier -w --print-width=120 --no-semi --arrow-parens=avoid'
alias ups='ps -N --ppid 2 -f'
alias vi='vim'
alias vo='vim -R'
alias wifi='sudo bash -c "nmcli device wifi connect \"\$0\" password \$1"'
alias winzip='unzip -O cp936'
alias wmount='sudo mount -o rw,uid=$UID,iocharset=utf8'
alias xcp='xsel -b <'
alias xtemp='redshift -PO'
alias zstar='ZSTD_CLEVEL=3 tar --zstd'
alias j='z'

# zsh config
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="robbyrussell"
HIST_STAMPS="yyyy-mm-dd"
plugins=(git extract z web-search sudo history dirhistory zsh-autosuggestions zsh-syntax-highlighting copypath copyfile zsh-history-substring-search zsh-you-should-use)
source $ZSH/oh-my-zsh.sh

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk
